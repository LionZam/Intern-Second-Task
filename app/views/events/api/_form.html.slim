= simple_form_for(event, html: { novalidate: false }, url: api_v1_events_path, method: :post, remote: true) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?
  .form-inputs
    .row
      .col
        = f.input :name_of_event, required: true, label: "Event title", placeholder: "Walk with dog"
      .col
        = f.input :date_event, as: :string, input_html: { type: "date" }, required: true
    .row
      .col
        .row
          .col
            .form-group
              label.form-control-label for = "event[start_of_event]" Start of event
              input.form-control name="event[start_of_event]" type="time"
          .col
            .form-group
              label.form-control-label for = "event_end_of_event" End of event
              input.form-control name = "event[end_of_event]" type = "time"
      .col
        .form-group
          label.form-control-label for = "event_regularity" Regularity
          select.form-control.custom-select name = "event[regularity]"
            option value = "o" Once
            option value = "d" Every day
            option value = "w" Every week
            option value = "m" Every month
            option value = "y" Every year

  .form-actions
    = f.button :submit, class: "btn-outline"
